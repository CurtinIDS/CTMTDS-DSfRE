#| echo: false
with open("data/people-100.csv") as f:
for _, line in zip(range(10), f):
print(line.strip())
import pandas as pd
data = pd.read_csv("data/people-100.csv", index_col="Index")
#| echo: false
from IPython.display import display
with pd.option_context('display.max_rows', 6):
display(data)
# | echo: false
with open("data/IDCJDW6111.202504.csv", encoding="latin_1") as f:
for _, line in zip(range(12), f):
print(line.strip())
#| echo: false
try:
pd.read_csv("data/IDCJDW6111.202504.csv")
except Exception as e:
print("Exception:", e)
#| echo: false
try:
pd.read_csv("data/IDCJDW6111.202504.csv", encoding="latin_1")
except Exception as e:
print("Exception", e)
df = pd.read_csv("data/IDCJDW6111.202504.csv", encoding="latin_1", skiprows=7)
#| echo: false
from IPython.display import display
with pd.option_context('display.max_rows', 2):
display(df)
df = pd.read_csv(
"data/IDCJDW6111.202504.csv",
encoding="latin_1",
skiprows=7,
index_col="Date",
parse_dates=["Date"], # a list of columns to parse as dates
usecols=range(1, 22)  # use column index or name to include columns
)
#| echo: false
from IPython.display import display
with pd.option_context('display.max_rows', 4):
display(df)
import pandas as pd
df = pd.read_parquet("../data/backblaze.parquet")
#| echo: false
from IPython.display import display
with pd.option_context('display.max_rows', 4):
display(df)
#| echo: false
df = pd.read_csv(
"data/people-100.csv", index_col="Index", parse_dates=["Date of birth"]
)
#| echo: false
df.info()
len(df)  # row count
df.shape  # (rows, columns)
df.head(2)
df.tail(1)
df["Sex"].value_counts()
df.iloc[0]  # Or equivalently: data.iloc[0, :]
#| echo: false
with open("data/people-100.csv") as f:
for _, line in zip(range(10), f):
print(line.strip())
import pandas as pd
data = pd.read_csv("data/people-100.csv", index_col="Index")
#| echo: false
from IPython.display import display
with pd.option_context('display.max_rows', 6):
display(data)
# | echo: false
with open("data/IDCJDW6111.202504.csv", encoding="latin_1") as f:
for _, line in zip(range(12), f):
print(line.strip())
#| echo: false
try:
pd.read_csv("data/IDCJDW6111.202504.csv")
except Exception as e:
print("Exception:", e)
#| echo: false
try:
pd.read_csv("data/IDCJDW6111.202504.csv", encoding="latin_1")
except Exception as e:
print("Exception", e)
df = pd.read_csv("data/IDCJDW6111.202504.csv", encoding="latin_1", skiprows=7)
#| echo: false
from IPython.display import display
with pd.option_context('display.max_rows', 2):
display(df)
df = pd.read_csv(
"data/IDCJDW6111.202504.csv",
encoding="latin_1",
skiprows=7,
index_col="Date",
parse_dates=["Date"], # a list of columns to parse as dates
usecols=range(1, 22)  # use column index or name to include columns
)
#| echo: false
from IPython.display import display
with pd.option_context('display.max_rows', 4):
display(df)
import pandas as pd
df = pd.read_parquet("../data/backblaze.parquet")
#| echo: false
from IPython.display import display
with pd.option_context('display.max_rows', 4):
display(df)
#| echo: false
df = pd.read_csv(
"data/people-100.csv", index_col="Index", parse_dates=["Date of birth"]
)
#| echo: false
df.info()
len(df)  # row count
df.shape  # (rows, columns)
df.head(2)
df.tail(1)
df["Sex"].value_counts()
df.iloc[0]  # Or equivalently: data.iloc[0, :]
df.iloc[3, 1]
df.iloc[:, 2]
df.loc[1]
df.loc[4, "First Name"]
df.loc[:, "Last Name"]
# Also: data["Last Name"]
df.iloc[3:5]
df.iloc[4:10, 1:3]
df[["First Name", "Last Name"]].iloc[4:10]
df
data
data["Sex" == "Male"]
data["Sex" == "Male"].head()
data["Sex"] == "Male"
reticulate::repl_python()
?acf
acf(lh)
reticulate::repl_python()
reticulate::repl_python()
library(fpp2)
goog
ts.plot(cumsum(rnorm(1000)))
reticulate::repl_python()
